-- Create the database
CREATE DATABASE clothing_store;
USE clothing_store;

-- Create the clothing_items table
CREATE TABLE clothing_items (
    item_id INT AUTO_INCREMENT PRIMARY KEY,
    category ENUM('Shirt', 'Pants', 'Dress', 'Jacket', 'Accessories') NOT NULL,
    brand VARCHAR(255) NOT NULL,
    color ENUM('Red', 'Blue', 'Black', 'White', 'Green', 'Yellow', 'Purple', 'Pink', 'Gray', 'Brown') NOT NULL,
    size ENUM('XS', 'S', 'M', 'L', 'XL', 'XXL') NOT NULL,
    price DECIMAL(8, 2) CHECK (price BETWEEN 10.00 AND 200.00),
    stock_quantity INT NOT NULL,
    UNIQUE KEY brand_color_size (brand, color, size)
);

-- Create the discounts table
CREATE TABLE discounts (
    discount_id INT AUTO_INCREMENT PRIMARY KEY,
    item_id INT NOT NULL,
    pct_discount DECIMAL(5,2) CHECK (pct_discount BETWEEN 0 AND 100),
    FOREIGN KEY (item_id) REFERENCES clothing_items(item_id)
);

-- Create a stored procedure to populate the clothing_items table
DELIMITER $$
CREATE PROCEDURE PopulateClothingItems()
BEGIN
    DECLARE counter INT DEFAULT 0;
    DECLARE max_records INT DEFAULT 100;
    DECLARE category ENUM('Shirt', 'Pants', 'Dress', 'Jacket', 'Accessories');
    DECLARE brand VARCHAR(255);
    DECLARE color ENUM('Red', 'Blue', 'Black', 'White', 'Green', 'Yellow', 'Purple', 'Pink', 'Gray', 'Brown');
    DECLARE size ENUM('XS', 'S', 'M', 'L', 'XL', 'XXL');
    DECLARE price DECIMAL(8, 2);
    DECLARE stock INT;

    -- Seed the random number generator
    SET SESSION rand_seed1 = UNIX_TIMESTAMP();

    WHILE counter < max_records DO
        -- Generate random values
        SET category = ELT(FLOOR(1 + RAND() * 5), 'Shirt', 'Pants', 'Dress', 'Jacket', 'Accessories');
        SET brand = ELT(FLOOR(1 + RAND() * 4), 'Gul Ahmed','J.','Outfitters','Khaadi'); -- You can replace 'Brand' with actual brand names
        SET color = ELT(FLOOR(1 + RAND() * 10), 'Red', 'Blue', 'Black', 'White', 'Green', 'Yellow', 'Purple', 'Pink', 'Gray', 'Brown');
        SET size = ELT(FLOOR(1 + RAND() * 6), 'XS', 'S', 'M', 'L', 'XL', 'XXL');
        SET price = ROUND(10.00 + RAND() * 190.00, 2);
        SET stock = FLOOR(10 + RAND() * 91);

        -- Attempt to insert a new record
        -- Duplicate brand, color, size combinations will be ignored due to the unique constraint
        BEGIN
            DECLARE CONTINUE HANDLER FOR 1062 BEGIN END;  -- Handle duplicate key error
            INSERT INTO clothing_items (category, brand, color, size, price, stock_quantity)
            VALUES (category, brand, color, size, price, stock);
            SET counter = counter + 1;
        END;
    END WHILE;
END$$
DELIMITER ;

-- Call the stored procedure to populate the clothing_items table
CALL PopulateClothingItems();

-- Insert at least 10 records into the discounts table
INSERT INTO discounts (item_id, pct_discount)
VALUES
(1, 10.00),
(2, 15.00),
(3, 20.00),
(4, 5.00),
(5, 25.00),
(6, 10.00),
(7, 30.00),
(8, 35.00),
(9, 40.00),
(10, 45.00);